# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from oca.models.base_model_ import Model
from oca.models.home_screen_bottom_sheet_header import HomeScreenBottomSheetHeader
from oca import util

from oca.models.home_screen_bottom_sheet_header import HomeScreenBottomSheetHeader  # noqa: E501

class HomeScreenBottomSheet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, header=None, rows=None):  # noqa: E501
        """HomeScreenBottomSheet - a model defined in OpenAPI

        :param header: The header of this HomeScreenBottomSheet.  # noqa: E501
        :type header: HomeScreenBottomSheetHeader
        :param rows: The rows of this HomeScreenBottomSheet.  # noqa: E501
        :type rows: List[Dict[str, object]]
        """
        self.openapi_types = {
            'header': HomeScreenBottomSheetHeader,
            'rows': List[Dict[str, object]]
        }

        self.attribute_map = {
            'header': 'header',
            'rows': 'rows'
        }

        self._header = header
        self._rows = rows

    @classmethod
    def from_dict(cls, dikt) -> 'HomeScreenBottomSheet':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The HomeScreenBottomSheet of this HomeScreenBottomSheet.  # noqa: E501
        :rtype: HomeScreenBottomSheet
        """
        return util.deserialize_model(dikt, cls)

    @property
    def header(self):
        """Gets the header of this HomeScreenBottomSheet.


        :return: The header of this HomeScreenBottomSheet.
        :rtype: HomeScreenBottomSheetHeader
        """
        return self._header

    @header.setter
    def header(self, header):
        """Sets the header of this HomeScreenBottomSheet.


        :param header: The header of this HomeScreenBottomSheet.
        :type header: HomeScreenBottomSheetHeader
        """
        if header is None:
            raise ValueError("Invalid value for `header`, must not be `None`")  # noqa: E501

        self._header = header

    @property
    def rows(self):
        """Gets the rows of this HomeScreenBottomSheet.


        :return: The rows of this HomeScreenBottomSheet.
        :rtype: List[Dict[str, object]]
        """
        return self._rows

    @rows.setter
    def rows(self, rows):
        """Sets the rows of this HomeScreenBottomSheet.


        :param rows: The rows of this HomeScreenBottomSheet.
        :type rows: List[Dict[str, object]]
        """
        if rows is None:
            raise ValueError("Invalid value for `rows`, must not be `None`")  # noqa: E501

        self._rows = rows
