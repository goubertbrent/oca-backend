# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from oca.models.base_model_ import Model
from oca import util


class HomeScreenBottomSheetHeader(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, title=None, subtitle=None, image=None):  # noqa: E501
        """HomeScreenBottomSheetHeader - a model defined in OpenAPI

        :param title: The title of this HomeScreenBottomSheetHeader.  # noqa: E501
        :type title: str
        :param subtitle: The subtitle of this HomeScreenBottomSheetHeader.  # noqa: E501
        :type subtitle: str
        :param image: The image of this HomeScreenBottomSheetHeader.  # noqa: E501
        :type image: str
        """
        self.openapi_types = {
            'title': str,
            'subtitle': str,
            'image': str
        }

        self.attribute_map = {
            'title': 'title',
            'subtitle': 'subtitle',
            'image': 'image'
        }

        self._title = title
        self._subtitle = subtitle
        self._image = image

    @classmethod
    def from_dict(cls, dikt) -> 'HomeScreenBottomSheetHeader':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The HomeScreenBottomSheetHeader of this HomeScreenBottomSheetHeader.  # noqa: E501
        :rtype: HomeScreenBottomSheetHeader
        """
        return util.deserialize_model(dikt, cls)

    @property
    def title(self):
        """Gets the title of this HomeScreenBottomSheetHeader.


        :return: The title of this HomeScreenBottomSheetHeader.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this HomeScreenBottomSheetHeader.


        :param title: The title of this HomeScreenBottomSheetHeader.
        :type title: str
        """
        if title is None:
            raise ValueError("Invalid value for `title`, must not be `None`")  # noqa: E501

        self._title = title

    @property
    def subtitle(self):
        """Gets the subtitle of this HomeScreenBottomSheetHeader.


        :return: The subtitle of this HomeScreenBottomSheetHeader.
        :rtype: str
        """
        return self._subtitle

    @subtitle.setter
    def subtitle(self, subtitle):
        """Sets the subtitle of this HomeScreenBottomSheetHeader.


        :param subtitle: The subtitle of this HomeScreenBottomSheetHeader.
        :type subtitle: str
        """

        self._subtitle = subtitle

    @property
    def image(self):
        """Gets the image of this HomeScreenBottomSheetHeader.


        :return: The image of this HomeScreenBottomSheetHeader.
        :rtype: str
        """
        return self._image

    @image.setter
    def image(self, image):
        """Sets the image of this HomeScreenBottomSheetHeader.


        :param image: The image of this HomeScreenBottomSheetHeader.
        :type image: str
        """

        self._image = image
